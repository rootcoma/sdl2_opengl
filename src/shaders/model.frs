#version 330

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

in vec4 pos;
in vec3 aNorm;

out vec4 fragColor;

void main()
{
    vec3 norm = normalize(aNorm);

    vec3 cameraPos = vec3(view[0].z, view[1].z, view[2].z);
    vec3 cameraLookAt = vec3(view[0].y, view[1].y, view[2].y);

    vec3 lightDir = normalize(cameraLookAt-cameraPos);

    float diff = max(dot(norm, lightDir), 0.0);
    vec3 diffuse = diff * vec3(0.7, 0.5, 0.5);
    vec3 result = (vec3(0.1, 0.3, 0.0) + diffuse) * vec3(
        (cos(pos.x*pos.y/40)+1.0)/2.0, 0.4, 0.2);
    fragColor = vec4(result, 1.0f);
}
